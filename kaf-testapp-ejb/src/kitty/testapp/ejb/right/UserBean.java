package kitty.testapp.ejb.right;

import java.sql.SQLException;
import java.util.List;
import javax.ejb.Stateless;
import kitty.kaf.io.KeyValue;
import kitty.kaf.cache.CacheValueList;
import java.util.Date;
import kitty.kaf.dao.DaoBean;
import kitty.testapp.ejb.right.dao.UserDaoHelper;
import kitty.testapp.inf.ds.right.beans.User;
import kitty.testapp.inf.ds.right.UserBeanRemote;

@Stateless(name = "testappUserBean", mappedName = "testappUserBean")
public class UserBean extends DaoBean implements UserBeanRemote {

    public void delete(Long loginUserId, List<Long> idList) throws SQLException {
        //[autogenerated:body(delete) statements=1]
        UserDaoHelper.delete(getDao(), loginUserId, idList);
    }

    public User findById(Long loginUserId, Long id) throws SQLException {
        //[autogenerated:body(findById) statements=1]
        User ret = UserDaoHelper.findById(getDao(), loginUserId, id);
        //[autogenerated:return(findById) statements=1]
        return ret;
    }

    public User findByUniqueKey(Long loginUserId, String keyCode) throws SQLException {
        //[autogenerated:body(findByUniqueKey) statements=1]
        User ret = UserDaoHelper.findByUniqueKey(getDao(), loginUserId, keyCode);
        //[autogenerated:return(findByUniqueKey) statements=1]
        return ret;
    }

    public User insert(Long loginUserId, User o) throws SQLException {
        //[autogenerated:body(insert) statements=1]
        User ret = UserDaoHelper.insert(getDao(), loginUserId, o);
        //[autogenerated:return(insert) statements=1]
        return ret;
    }

    public User edit(Long loginUserId, User o) throws SQLException {
        //[autogenerated:body(edit) statements=1]
        User ret = UserDaoHelper.edit(getDao(), loginUserId, o);
        //[autogenerated:return(edit) statements=1]
        return ret;
    }

    public List<User> query(Long loginUserId, String cmd, int maxResults, List<?> params) throws SQLException {
        //[autogenerated:body(query) statements=1]
        List<User> ret = UserDaoHelper.query(getDao(), loginUserId, cmd, maxResults, params);
        //[autogenerated:return(query) statements=1]
        return ret;
    }

    public KeyValue<Integer, List<User>> queryPage(Long loginUserId, String cmd, long firstIndex, int maxResults, List<?> params) throws SQLException {
        //[autogenerated:body(queryPage) statements=1]
        KeyValue<Integer, List<User>> ret = UserDaoHelper.queryPage(getDao(), loginUserId, cmd, firstIndex, maxResults, params);
        //[autogenerated:return(queryPage) statements=1]
        return ret;
    }

    public CacheValueList<?, ?> queryLatest(Long loginUserId, String cmd, long firstIndex, int maxResults, Date lastModified) throws SQLException {
        //[autogenerated:body(queryLatest) statements=1]
        CacheValueList<?, ?> ret = UserDaoHelper.queryLatest(getDao(), loginUserId, cmd, firstIndex, maxResults, lastModified);
        //[autogenerated:return(queryLatest) statements=1]
        return ret;
    }

    public Object execute(Long loginUserId, String cmd, List<?> params) throws SQLException {
        //[autogenerated:body(execute) statements=1]
        Object ret = UserDaoHelper.execute(getDao(), loginUserId, cmd, params);
        //[autogenerated:return(execute) statements=1]
        return ret;
    }
}
